{"ast":null,"code":"var _jsxFileName = \"/Users/ons/Documents/React/Redux/would_you_rather_app/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  render() {\n    const {\n      data\n    } = this.props;\n    console.log('DATA', data);\n    return /*#__PURE__*/_jsxDEV(Tab, {\n      panes: panes({\n        data\n      }),\n      renderActiveOnly: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst panes = props => {\n  const {\n    data\n  } = props;\n  return [{\n    menuItem: 'Unanswered',\n    pane: 'Unanswered',\n    render: () => /*#__PURE__*/_jsxDEV(Tab.Pane, {\n      children: \"'Unanswered'\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, {\n    menuItem: 'Answered',\n    render: () => /*#__PURE__*/_jsxDEV(Tab.Pane, {\n      children: \"Answered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }];\n};\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}) {\n  const answeredIds = Object.keys(users[authedUser].answers);\n  const answered = Object.values(questions).filter(question => answeredIds.includes(question.id)).sort((a, b) => b.timestamp - a.timestamp);\n  const unanswered = Object.values(questions).filter(question => !answeredIds.includes(question.id)).sort((a, b) => b.timestamp - a.timestamp);\n  const answeredQuestions = questions.filter(question => {\n    return Object.keys(user.answers).find();\n  });\n  return {\n    data: {\n      answered,\n      unanswered\n    }\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/Users/ons/Documents/React/Redux/would_you_rather_app/src/components/Home.js"],"names":["React","Component","Tab","connect","Home","render","data","props","console","log","panes","menuItem","pane","mapStateToProps","authedUser","users","questions","answeredIds","Object","keys","answers","answered","values","filter","question","includes","id","sort","a","b","timestamp","unanswered","answeredQuestions","user","find"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,GAAR,QAAkB,mBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGC,OAAQ,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAElCI,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,MAAb,EAAqBH,IAArB;AACA,wBAAO,QAAC,GAAD;AAAK,MAAA,KAAK,EAAEI,KAAK,CAAC;AAAEJ,QAAAA;AAAF,OAAD,CAAjB;AAA8B,MAAA,gBAAgB,EAAE;AAAhD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAN+B;;AAatC,MAAMI,KAAK,GAAIH,KAAD,IAAS;AAEvB,QAAM;AAACD,IAAAA;AAAD,MAASC,KAAf;AAEA,SAAO,CAEP;AACAI,IAAAA,QAAQ,EAAG,YADX;AAEAC,IAAAA,IAAI,EAAE,YAFN;AAGAP,IAAAA,MAAM,EAAG,mBAEL,QAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ,GAFO,EAWP;AAGIM,IAAAA,QAAQ,EAAG,UAHf;AAIIN,IAAAA,MAAM,EAAG,mBAEL,QAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANR,GAXO,CAAP;AAyBC,CA7BD;;AA8BA,SAASQ,eAAT,CAAyB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAzB,EAA2D;AACvD,QAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACD,UAAD,CAAL,CAAkBM,OAA9B,CAApB;AACA,QAAMC,QAAQ,GAAGH,MAAM,CAACI,MAAP,CAAcN,SAAd,EACdO,MADc,CACPC,QAAQ,IAAIP,WAAW,CAACQ,QAAZ,CAAqBD,QAAQ,CAACE,EAA9B,CADL,EAEdC,IAFc,CAET,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAFjB,CAAjB;AAGA,QAAMC,UAAU,GAAGb,MAAM,CAACI,MAAP,CAAcN,SAAd,EAChBO,MADgB,CACTC,QAAQ,IAAI,CAACP,WAAW,CAACQ,QAAZ,CAAqBD,QAAQ,CAACE,EAA9B,CADJ,EAEhBC,IAFgB,CAEX,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,SAAF,GAAcF,CAAC,CAACE,SAFf,CAAnB;AAIJ,QAAME,iBAAiB,GAAGhB,SAAS,CAACO,MAAV,CAAkBC,QAAD,IAAa;AAExD,WAAON,MAAM,CAACC,IAAP,CAAYc,IAAI,CAACb,OAAjB,EAA0Bc,IAA1B,EAAP;AAKC,GAPyB,CAA1B;AAWI,SAAO;AACL5B,IAAAA,IAAI,EAAE;AACJe,MAAAA,QADI;AAEJU,MAAAA;AAFI;AADD,GAAP;AAMD;;AAED,eAAe5B,OAAO,CAACU,eAAD,CAAP,CAAyBT,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Tab} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\n\n\n export  class Home extends Component {\n\n    render() {\n        const { data } = this.props;\n        console.log ('DATA', data)\n        return <Tab panes={panes({ data })}  renderActiveOnly={false} />;\n      }\n    \n\n\n\n}\n\nconst panes = (props)=>{\n\nconst {data} = props;\n\nreturn [\n\n{\nmenuItem : 'Unanswered',\npane: 'Unanswered',\nrender : () => (\n\n    <Tab.Pane>'Unanswered'</Tab.Pane>\n)\n\n},\n{\n\n\n    menuItem : 'Answered',\n    render : () => (\n    \n        <Tab.Pane>Answered</Tab.Pane>\n    )\n    \n}  \n\n\n];\n\n}\nfunction mapStateToProps({ authedUser, users, questions }) {\n    const answeredIds = Object.keys(users[authedUser].answers);\n    const answered = Object.values(questions)\n      .filter(question => answeredIds.includes(question.id))\n      .sort((a, b) => b.timestamp - a.timestamp);\n    const unanswered = Object.values(questions)\n      .filter(question => !answeredIds.includes(question.id))\n      .sort((a, b) => b.timestamp - a.timestamp);\n  \nconst answeredQuestions = questions.filter((question) =>{\n\nreturn Object.keys(user.answers).find(\n\n\n)\n\n}\n)\n\n\n    return {\n      data: {\n        answered,\n        unanswered\n      }\n    };\n  }\n  \n  export default connect(mapStateToProps)(Home);"]},"metadata":{},"sourceType":"module"}