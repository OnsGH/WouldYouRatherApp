{"ast":null,"code":"import { getInitialData } from '../utils/_DATA.js';\nimport { receiveUsers } from '../actions/users';\nimport { receiveQuestions } from '../actions/questions';\nimport { setAuthedUser } from '../actions/authedUser'; //mport { showLoading, hideLoading } from 'react-redux-loading'\n\nexport function handleInitilData() {\n  return dispatch => {\n    // dispatch(showLoading())\n    return getInitialData().then(({\n      users,\n      questions\n    }) => {\n      dispatch(receiveUsers(users));\n      dispatch(receiveQuestions(questions));\n      dispatch(setAuthedUser(AUTHED_ID)); // dispatch(hideLoading())\n    });\n  }; // when we receive our users and questions, we want to dispatch AUTHED user\n  // next step is set up the reducers to modify our state based on these actions\n}","map":{"version":3,"sources":["/Users/ons/Documents/React/Redux/would_you_rather_app/src/actions/shared.js"],"names":["getInitialData","receiveUsers","receiveQuestions","setAuthedUser","handleInitilData","dispatch","then","users","questions","AUTHED_ID"],"mappings":"AAAA,SAASA,cAAT,QAA+B,mBAA/B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,gBAAT,QAAgC,sBAAhC;AACA,SAASC,aAAT,QAA8B,uBAA9B,C,CACA;;AAGA,OAAO,SAASC,gBAAT,GAA2B;AAElC,SAAQC,QAAD,IAAc;AAClB;AACC,WAAOL,cAAc,GACpBM,IADM,CAEH,CAAC;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAD,KAAsB;AAClBH,MAAAA,QAAQ,CAACJ,YAAY,CAACM,KAAD,CAAb,CAAR;AACAF,MAAAA,QAAQ,CAACH,gBAAgB,CAACM,SAAD,CAAjB,CAAR;AACAH,MAAAA,QAAQ,CAACF,aAAa,CAACM,SAAD,CAAd,CAAR,CAHkB,CAInB;AACF,KAPE,CAAP;AAUH,GAZD,CAFkC,CAelC;AACA;AAEC","sourcesContent":["import { getInitialData } from '../utils/_DATA.js'\nimport { receiveUsers } from '../actions/users'\nimport { receiveQuestions} from '../actions/questions'\nimport { setAuthedUser } from '../actions/authedUser'\n//mport { showLoading, hideLoading } from 'react-redux-loading'\n\n\nexport function handleInitilData(){\n\nreturn (dispatch) => {\n   // dispatch(showLoading())\n    return getInitialData()\n    .then(\n        ({users,questions}) =>{\n            dispatch(receiveUsers(users))\n            dispatch(receiveQuestions(questions))\n            dispatch(setAuthedUser(AUTHED_ID))\n           // dispatch(hideLoading())\n        }\n    )\n\n}\n// when we receive our users and questions, we want to dispatch AUTHED user\n// next step is set up the reducers to modify our state based on these actions\n\n}"]},"metadata":{},"sourceType":"module"}