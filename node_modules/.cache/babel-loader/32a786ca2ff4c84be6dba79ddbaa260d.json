{"ast":null,"code":"import { RECEIVE_QUESTIONS, ADD_QUESTION, ADD_ANSWER_TO_QUESTION } from '../actions/questions';\nimport _DATA from '../utils/_DATA';\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return { ...state,\n        ...action.questions\n      };\n\n    case ADD_QUESTION:\n      const {\n        question\n      } = action;\n      return { ...state,\n        [question.id]: question\n      };\n\n    case ADD_ANSWER_TO_QUESTION:\n      const {\n        authedUser,\n        question_id,\n        answer_question\n      } = action;\n      return { ...state,\n        [question_id]: { ...state[question_id],\n          [answer_question]: { ...state[question_id][answer_question],\n            votes: state[question_id][answer_question].votes.concat(authedUser)\n          }\n        }\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/ons/Documents/React/Redux/would_you_rather_app/src/reducers/questions.js"],"names":["RECEIVE_QUESTIONS","ADD_QUESTION","ADD_ANSWER_TO_QUESTION","_DATA","questions","state","action","type","question","id","authedUser","question_id","answer_question","votes","concat"],"mappings":"AAAA,SAAQA,iBAAR,EAA2BC,YAA3B,EAAwCC,sBAAxC,QAAqE,sBAArE;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAK,GAAG,EAA3B,EAA+BC,MAA/B,EAAsC;AAGrD,UAAOA,MAAM,CAACC,IAAd;AAEG,SAAKP,iBAAL;AACC,aAAO,EACP,GAAGK,KADI;AAEP,WAAGC,MAAM,CAACF;AAFH,OAAP;;AAMJ,SAAKH,YAAL;AAEQ,YAAM;AAAEO,QAAAA;AAAF,UAAeF,MAArB;AACA,aAAO,EACH,GAAGD,KADA;AAEL,SAACG,QAAQ,CAACC,EAAV,GAAeD;AAFV,OAAP;;AAMJ,SAAKN,sBAAL;AACG,YAAM;AAACQ,QAAAA,UAAD;AAAaC,QAAAA,WAAb;AAA0BC,QAAAA;AAA1B,UAA6CN,MAAnD;AACD,aAAO,EACD,GAAGD,KADF;AAED,SAACM,WAAD,GAAe,EACb,GAAGN,KAAK,CAACM,WAAD,CADK;AAEb,WAACC,eAAD,GAAmB,EACjB,GAAGP,KAAK,CAACM,WAAD,CAAL,CAAmBC,eAAnB,CADc;AAEjBC,YAAAA,KAAK,EAAER,KAAK,CAACM,WAAD,CAAL,CAAmBC,eAAnB,EAAoCC,KAApC,CAA0CC,MAA1C,CAAiDJ,UAAjD;AAFU;AAFN;AAFd,OAAP;;AAaF;AACI,aAAOL,KAAP;AAlCR;AAuCC","sourcesContent":["import {RECEIVE_QUESTIONS, ADD_QUESTION,ADD_ANSWER_TO_QUESTION} from '../actions/questions'\nimport _DATA from '../utils/_DATA'\n\nexport default function questions(state = {}, action){\n\n\nswitch(action.type){\n\n   case RECEIVE_QUESTIONS : \n    return {\n    ...state,\n    ...action.questions\n    }\n\n\ncase ADD_QUESTION : \n \n        const { question } = action;\n        return {\n            ...state,\n          [question.id]: question\n        };\n    \n\n    case ADD_ANSWER_TO_QUESTION :\n       const {authedUser, question_id, answer_question} = action\n      return {\n            ...state,\n            [question_id]: {\n              ...state[question_id],\n              [answer_question]: {\n                ...state[question_id][answer_question],\n                votes: state[question_id][answer_question].votes.concat(authedUser)\n              }\n            }\n\n            }\n      \n\n    default:\n        return state\n}\n\n\n\n}"]},"metadata":{},"sourceType":"module"}