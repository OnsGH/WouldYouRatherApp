{"ast":null,"code":"var _jsxFileName = \"/Users/ons/Documents/React/Redux/would_you_rather_app/src/components/Home.js\";\nimport React, { Component } from 'react';\nimport { Tab, Image, Card } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport CardDetails from './CardDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Home extends Component {\n  render() {\n    const id = 'sarahdo';\n    const {\n      data,\n      users\n    } = this.props;\n    console.log('DATA', data);\n    console.log('AVATAR ', users[sarahdo].avatarURL);\n    return /*#__PURE__*/_jsxDEV(Tab, {\n      panes: panes({\n        data\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst panes = props => {\n  const {\n    data,\n    users\n  } = props;\n  return [{\n    menuItem: 'Unanswered',\n    render: () => /*#__PURE__*/_jsxDEV(Tab.Pane, {\n      children: /*#__PURE__*/_jsxDEV(Card.Group, {\n        children: data.unansweredQuestions.map(question => /*#__PURE__*/_jsxDEV(CardDetails, {\n          question_id: question.id,\n          unanswered: true,\n          optOne: data.optionOne,\n          optTwo: data.optionTwo,\n          user_id: question.author,\n          avatar: users[question.author].avatarURL\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, {\n    menuItem: 'Answered',\n    render: () => /*#__PURE__*/_jsxDEV(Tab.Pane, {\n      children: \"Answered\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 39\n    }, this)\n  }];\n};\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}) {\n  const answeredIds = Object.keys(users[authedUser].answers);\n  const unansweredQuestions = Object.values(questions).filter(question => !answeredIds.includes(question.id)).sort((a, b) => b.timestamp - a.timestamp);\n  const answeredQuestions = Object.values(questions).filter(question => {\n    return Object.keys(users[authedUser].answers).find(userQuestion => userQuestion === question.id);\n  }).sort((a, b) => b.timestamp - a.timestamp);\n  console.log('answeredQuestions', answeredQuestions);\n  console.log('USERS', users);\n  return {\n    users,\n    data: {\n      answeredQuestions,\n      unansweredQuestions // answeredQuestions\n\n    }\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["/Users/ons/Documents/React/Redux/would_you_rather_app/src/components/Home.js"],"names":["React","Component","Tab","Image","Card","connect","CardDetails","Home","render","id","data","users","props","console","log","sarahdo","avatarURL","panes","menuItem","unansweredQuestions","map","question","optionOne","optionTwo","author","mapStateToProps","authedUser","questions","answeredIds","Object","keys","answers","values","filter","includes","sort","a","b","timestamp","answeredQuestions","find","userQuestion"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Tab, Image, Card} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport CardDetails from './CardDetails'\n\n\n export  class Home extends Component {\n\n    render() {\n        const id='sarahdo'\n        const { data,users } = this.props;\n        console.log ('DATA', data)\n        console.log('AVATAR ',users[sarahdo].avatarURL)\n        return <Tab panes={panes({ data })}  />;\n      }\n    \n\n\n\n}\n\nconst panes = (props)=> {\n\nconst {data,users} = props;\n\nreturn [\n{\nmenuItem : 'Unanswered', render: () =>  (\n    <Tab.Pane>\n     <Card.Group>\n     {\n     data.unansweredQuestions.map(question => (\n          \n     <CardDetails key={question.id} question_id = {question.id}\n     unanswered={true}  optOne = {data.optionOne} optTwo = {data.optionTwo} user_id = {question.author} avatar={users[question.author].avatarURL}/>\n     ))}\n     </Card.Group> \n    </Tab.Pane>\n     )\n},\n\n{\nmenuItem : 'Answered', render: () =>  <Tab.Pane>Answered</Tab.Pane>\n}  \n];\n\n}\nfunction mapStateToProps({ authedUser, users, questions }) {\n    const answeredIds = Object.keys(users[authedUser].answers);\n    \n    const unansweredQuestions = Object.values(questions)\n      .filter(question => !answeredIds.includes(question.id))\n      .sort((a, b) => b.timestamp - a.timestamp);\n  \n   const answeredQuestions = Object.values(questions)\n   .filter((question) => {\n    return Object.keys(users[authedUser].answers).find(\n    (userQuestion) => userQuestion === question.id)})\n    .sort((a, b) => b.timestamp - a.timestamp);\n    \n    console.log('answeredQuestions', answeredQuestions)\n    console.log('USERS', users)\n    return {\n      users,\n      data: {\n        answeredQuestions,\n        unansweredQuestions,\n       // answeredQuestions\n      }\n    };\n  }\n  \n  export default connect(mapStateToProps)(Home);"]},"metadata":{},"sourceType":"module"}