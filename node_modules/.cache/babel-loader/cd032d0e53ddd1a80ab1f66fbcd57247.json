{"ast":null,"code":"import { _saveQuestion } from '../utils/_DATA';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const ADD_ANSWER_TO_QUESTION = 'ADD_ANSWER_TO_QUESTION ';\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\nexport function addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\nexport function addAnswerToQuestion(authedUser, qid, answer) {\n  return {\n    TYPE: ADD_ANSWER_TO_QUESTION,\n    [qid]: { ...state[qid]\n    },\n    [answer]: { ...state[answer]\n    }\n  };\n}\nexport function handleAddQuestion(optionOneText, optionTwoText, author) {\n  return dispatch => {\n    return _saveQuestion({\n      optionOneText,\n      optionTwoText,\n      author\n    }).then(question => dispatch(addQuestion(question)));\n  };\n}","map":{"version":3,"sources":["/Users/ons/Documents/React/Redux/would_you_rather_app/src/actions/questions.js"],"names":["_saveQuestion","RECEIVE_QUESTIONS","ADD_QUESTION","ADD_ANSWER_TO_QUESTION","receiveQuestions","questions","type","addQuestion","question","addAnswerToQuestion","authedUser","qid","answer","TYPE","state","handleAddQuestion","optionOneText","optionTwoText","author","dispatch","then"],"mappings":"AAAA,SAASA,aAAT,QAA8B,gBAA9B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,sBAAsB,GAAG,yBAA/B;AAGP,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAoC;AAC3C,SAAO;AACHC,IAAAA,IAAI,EAAGL,iBADJ;AAEHI,IAAAA;AAFG,GAAP;AAMC;AAED,OAAO,SAASE,WAAT,CAAqBC,QAArB,EAA8B;AACrC,SAAO;AACHF,IAAAA,IAAI,EAAGJ,YADJ;AAEHM,IAAAA;AAFG,GAAP;AAKC;AAED,OAAO,SAASC,mBAAT,CAA6BC,UAA7B,EAAyCC,GAAzC,EAA8CC,MAA9C,EAAsD;AACzD,SAAO;AACHC,IAAAA,IAAI,EAAEV,sBADH;AAEH,KAACQ,GAAD,GAAO,EACH,GAAGG,KAAK,CAACH,GAAD;AADL,KAFJ;AAKH,KAACC,MAAD,GAAS,EACL,GAAGE,KAAK,CAACF,MAAD;AADH;AALN,GAAP;AAUH;AAED,OAAO,SAASG,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyDC,MAAzD,EAAgE;AACnE,SAAQC,QAAD,IAAc;AAEjB,WAAOnB,aAAa,CAAE;AACpBgB,MAAAA,aADoB;AAEpBC,MAAAA,aAFoB;AAGpBC,MAAAA;AAHoB,KAAF,CAAb,CAIbE,IAJa,CAINZ,QAAD,IAAcW,QAAQ,CAACZ,WAAW,CAACC,QAAD,CAAZ,CAJf,CAAP;AAKP,GAPG;AAQH","sourcesContent":["import { _saveQuestion } from '../utils/_DATA'\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\nexport const ADD_QUESTION = 'ADD_QUESTION'\nexport const ADD_ANSWER_TO_QUESTION = 'ADD_ANSWER_TO_QUESTION '\n\n\nexport function receiveQuestions(questions){\nreturn {\n    type : RECEIVE_QUESTIONS,\n    questions,\n\n\n}\n}\n\nexport function addQuestion(question){\nreturn {\n    type : ADD_QUESTION,\n    question,\n}\n\n}\n\nexport function addAnswerToQuestion(authedUser, qid, answer ){\n    return {\n        TYPE: ADD_ANSWER_TO_QUESTION,\n        [qid]: {\n            ...state[qid],\n        },\n        [answer]:{\n            ...state[answer]\n        }\n    }\n\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText, author){\n    return (dispatch) => {\n       \n        return _saveQuestion ({\n          optionOneText,\n          optionTwoText, \n          author })\n .then ((question) => dispatch(addQuestion(question)))\n}\n}\n\n"]},"metadata":{},"sourceType":"module"}